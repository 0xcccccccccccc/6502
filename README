     ____ ______ ______  ____
    /  _//\  __//\  __ \/\_, \
   /\  __ \\___  \\ \/\ \//  /__
   \ \_____\\____/ \_____\\_____\
MOS \/_____//___/ \/_____//_____/ CPU Emulator v0.1
Copyright (C) 1999-2020 Manuel Sainz de Baranda y Go√±i <manuel@zxe.io>

This is a MOS 6502 CPU emulator that I wrote many years ago. It is fast, small,
easy to understand, and the code is profusely commented.


BUILDING
========

  You must first install Z <http://zeta.st>, a header-only library that provides
  types and macros.  This is the only dependency, the emulator doesn't use the C
  standard library or its headers.  Then add 6502.h and 6502.c to your project
  and configure its build system so that M6502_CPU_STATIC and
  M6502_CPU_USE_LOCAL_HEADER are predefined when compiling the sources.

  If you preffer to build the emulator as a library, you can use premake4:

    $ cd building
    $ premake4 gmake                         # generate Makefile
    $ make help                              # list available targets
    $ make [config=<configuration>] [target] # build the emulator

  There is also an Xcode project in "development/Xcode" with two targets:

  6502 (dynamic)
    Shared library.

  6502 (static)
    Static library.


CODE CONFIGURATION
==================

  There are some predefined macros that control the compilation:

  M6502_CPU_DEPENDENCIES_HEADER
    If defined, it replaces the inclusion of any external header with this one.
    If you don't want to use Z, you can provide your own header with the types
    and macros used by the emulator.

  M6502_CPU_STATIC
    You need to define this to compile or use the emulator as a static library
    or if you have added 6502.h and 6502.c to your project.

  M6502_CPU_USE_LOCAL_HEADER
    Use this if you have imported 6502.h and 6502.c to your project. 6502.c will
    #include "6502.h" instead of <emulation/CPU/6502.h>.
